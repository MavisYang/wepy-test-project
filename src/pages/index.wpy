<style lang="less">
.userinfo {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.userinfo-avatar {
  width: 80rpx;
  height: 80rpx;
  border-radius: 50%;
  border: 1rpx solid #fff66f;
}

.userinfo-nickname {
  color: #444;
  font-family: PingFangSC-Medium;
  font-size: 30rpx;
}
.swipper-view {
  .swiper-tab {
    height: 460rpx;
  }
  image {
    width: 750rpx;
    height: 100%;
  }
  .swiper-item-view {
    display: flex;
    height: 100%;
    padding: 40rpx 24rpx;
    margin: 10rpx auto;
  }
}
</style>
<template lang='wxml'>
  <view class="container">
    <view class="userInfo-view">
      <button  wx:if='{{!hasUserInfo&&canIUse}}' open-type="getUserInfo" type='primary' @getuserinfo="getUserInfo">获取信息</button>
        <view wx:else class="userinfo">
          <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
          <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
        </view>
    </view>
    <view class='swipper-view'>
      <view class="headTitle textCenter">- 每周微任务 -</view>
      <swiper class="swiper-tab" autoplay="{{true}}">
         <repeat for='{{imgUrls}}' key='index' index='index' item='item'>
            <swiper-item @tap='handleSwiper({{item.id}},{{item.pic}})'>
             <view class='swiper-item-view'> <image src='{{item.pic}}' /></view>
            </swiper-item>
          </repeat>
       
      </swiper>
    </view>
    <CountDown :timeUpdate='downTime' ></CountDown>
    <CountDown1 :timeUpdate='downTime2'></CountDown1>
  </view>
</template>

<script>
import wepy from "wepy";
import wxRequest from "../utils/wxRequest.js";
import utils from "../utils/utils.js";
import CountDown from "../components/countDown";
import CountDown1 from "../components/countDown";
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: "获取用户信息"
  };
  components = {
    CountDown: CountDown,
    CountDown1: CountDown1
  };

  data = {
    userInfo: null,
    hasUserInfo: false, //用户授权状态
    canIUse: wx.canIUse("button.open-type.getUserInfo"), //判断是否支持button微信授权
    downTime:{
      timeUpdate: 1532008742837, //倒计时
      type: 1,
    },
    downTime2:{
      timeUpdate: 1534008742850, //倒计时
      type: 2,
    },
    imgUrls: [
      {
        id: Math.random()
          .toString()
          .slice(-12),
        pic:
          "http://img02.tooopen.com/images/20150928/tooopen_sy_143912755726.jpg"
      },
      {
        id: Math.random()
          .toString()
          .slice(-12),
        pic:
          "http://img06.tooopen.com/images/20160818/tooopen_sy_175866434296.jpg"
      },
      {
        id: Math.random()
          .toString()
          .slice(-12),
        pic:
          "http://img06.tooopen.com/images/20160818/tooopen_sy_175833047715.jpg"
      }
    ]
  };

  //页面的生命周期函数
  onLoad() {
    console.log("初始化加载--onLoad");
    // 初始化时获取userinfo
    this.$parent.getGlobalDatas(this.canIUse, res => {
      console.log("初始化加载--", res);
      this.hasUserInfo = res.hasUserInfo;
      this.userInfo = res.userInfo;
      this.$apply();
    });

    // 获取数据
    // let url = 'http://ons.me/tools/dropload/json.php?page=0&size=10';
    // wxRequest.fetch(url, null, null, 'GET').then(res => {
    //   this.imgUrls = res.data;
    //   this.$apply();
    // });
  }
  computed = {};

  // wxml事件处理函数对象，存放响应wxml中所捕获到的事件的函数，如bindtap、bindchange
  methods = {
    handleSwiper(id, pic, options) {
      console.log(id, pic, options);
      /**
       * id:11111
       * pic:"http://img02.tooopen.com/images/20150928/tooopen_sy_143912755726.jpg"
       *  options:_class {active: true, name: "system", source: e, type: "tap", timeStamp: 4463, …}
       */
      /**
       * 传参数
       * id==options.currentTarget.detaset.wpyhandleswiperA
       * pic==options.currentTarget.detaset.wpyhandleswiperB
       */
      utils.pageGo("/pages/home?type=" + id, 1);
    }
  };
  //声明组件之间的事件处理函数
  //  WePY组件事件处理函数对象，存放响应组件之间通过$broadcast、$emit、$invoke所传递的事件的函数
  //用于监听组件之间的通信与交互事件的事件处理函数需要写在组件和页面的events对象中
  events = {
    "index-emit": (...args) => {
      let $event = args[args.length - 1];

      console.log(
        `${this.$name} receive ${$event.name} from ${$event.source.$name}`
      );
    }
  };

  // 初登陆时 如果没有存储的userinfo则点击获取，

  getUserInfo(e) {
    console.log(e, this.$parent, "e");
    // 在Page页面实例中，可以通过this.$parent来访问App实例。
    this.$parent.getUserInfo(e, "sell", res => {
      "use strict";
      console.log("getUserInfo", res);
      this.hasUserInfo = res.hasUserInfo;
      this.userInfo = res.userInfo;
      this.$apply();
    });
  }
}
</script>
