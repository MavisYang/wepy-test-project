<style lang="less">
.textHide {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.flexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}
.textCenter {
  text-align: center;
}
.container {
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
}
</style>

<script>
import wepy from "wepy";
import "wepy-async-function";

import { setStore } from "wepy-redux";
import configStore from "./store";
import API from "./utils/api.js";
import wxRequest from "./utils/wxRequest.js";

const store = configStore();
setStore(store);

export default class extends wepy.app {
  config = {
    pages: ["pages/index", "pages/home"],
    window: {
      backgroundTextStyle: "light",
      navigationBarBackgroundColor: "#fff",
      navigationBarTitleText: "WeChat",
      navigationBarTextStyle: "black"
    }
  };

  globalData = {
    userInfo: null
  };

  constructor() {
    super();
    this.use("requestfix"); //在app.wpy中使API promise化
    this.use("promisify");
  }

  onLaunch() {
    // console.log("onLaunch--");
    // 微信预登陆
    // wx.login({
    //   success: function(e) {
    //     console.log("登录成功", e);
    //   }
    // });
  }
  // 全局获取用户信息
  getUserInfo(res) {
    let _this = this;
    // console.log("获取用户信息--", res);
    if (res.detail.errMsg == "getUserInfo:fail auth deny") {
      wx.showModal({
        title: "用户授权",
        content: "本小程序需用户授权，请重新点击按钮授权。",
        mask: true,
        confirmColor: "#F45C43",
        success: function(res) {}
      });
    } else if (res.detail.errMsg == "getUserInfo:ok") {
      let userInfo = res.detail.userInfo;
      _this.globalData.userInfo = userInfo;
      wx.setStorageSync("userinfo", userInfo);
      // callback({
      //   hasUserInfo: true,
      //   userInfo: userInfo
      // });
      _this.wxLogin(res.detail.encryptedData, res.detail.iv);
    }
  }

  //授权登录，拿token

  wxLogin(encryptedData, iv) {
    wx.login({
      success: function(res) {
        "use strict";
        if (res.code) {
          let params = {
            appid: API.APP_ID,
            code: res.code,
            encryptedData: encryptedData,
            iv: iv
          };
          wxRequest.fetch(API.authLogin, null, params, "POST").then(res => {
            "use strict";
            // console.log()
            if (res.data.resultCode === "100") {
              console.log(res.data.resultContent);
              wx.setStorageSync("unionid", res.data.resultContent.unionId);
              wx.setStorageSync("openid", res.data.resultContent.openId);
              AuthProvider.onLogin();
            } else {
              console.log("error");
            }
          });
        }
      }
    });
  }

  // 获取全局属性 用户信息，登录状态
  getGlobalData(canIUse, callback) {
    // console.log(canIUse, callback, "canIUse, callback");
    let _this = this;
    let userinfos = wx.getStorageSync("userinfo");
    if (userinfos.hasOwnProperty("nickName")) {
      // console.log(userinfos, "获取全局属性 用户信息，登录状态");
      callback({
        userInfo: userinfos,
        hasUserInfo: true
      });
    } else {
      if (_this.globalData.userInfo) {
        callback({
          userInfo: _this.globalData.userInfo,
          hasUserInfo: true
        });
        return;
      } else if (canIUse) {
        // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
        // 所以此处加入 callback 以防止这种情况
        _this.userInfoReadyCallback = res => {
          console.log(res, "res---");

          callback({
            userInfo: res.userInfo,
            hasUserInfo: true
          });
        };
      } else if (!canIUse) {
        console.log("low version");
        wx.showModal({
          // 向用户提示升级至最新版微信。
          title: "提示",
          confirmColor: "#F45C43",
          content: "微信版本过低，请升级至最新版。",
          mask: true
        });
        callback({
          userInfo: null,
          hasUserInfo: false
        });
      } else {
        //没有授权
        callback({
          userInfo: null,
          hasUserInfo: false
        });
      }
    }
  }
}
</script>
